name: Build ASH Image
on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:
    branches:
      - '*'
permissions:
  actions: read
  checks: write
  contents: write
  id-token: write
  security-events: write
  pull-requests: write
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      IMG_NAME: ${{ github.repository }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set container metadata
        id: metadata
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.IMG_NAME }}
          tags: |
            type=raw,value={{sha}},enable=${{ github.ref_type != 'tag' }}

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: '.'
          push: false
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

      - name: Run ASH against itself
        run: |-
          # Create the ash_output directory if it doesn't exist
          mkdir -p ash_output

          # Enable errexit and print commands as they are run
          set +e
          # Set the exit code to 0 by default
          EXIT_CODE=0

          # Run ASH against itself
          {
            docker run \
              --platform linux/amd64 \
              --mount type=bind,source="$(pwd)",destination=/src,readonly \
              --mount type=bind,source="$(pwd)/ash_output",destination=/out \
              --tmpfs /run/scan/src:rw,noexec,nosuid \
              ${{ env.IMG_NAME }}  \
              ash --source-dir /src --output-dir /out | tee ash_output/ash_stdout.txt
          } || EXIT_CODE=1

          if [[ "${EXIT_CODE}" != "0" ]]; then
            cat ash_output/aggregated_results.txt
          fi
          echo "EXIT_CODE $EXIT_CODE"

      - name: Collect ash_stdout.txt
        uses: actions/upload-artifact@v2
        with:
          name: ash_stdout
          path: ash_output/ash_stdout.txt

      - name: Collect aggregated_results.txt
        uses: actions/upload-artifact@v2
        with:
          name: aggregated_results
          path: ash_output/aggregated_results.txt
          if-no-files-found: error
